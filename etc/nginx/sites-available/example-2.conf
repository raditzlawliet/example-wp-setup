
server {

        listen 80 default_server;
        listen [::]:80 default_server;

#        server_name ~.;
        server_name example.com www.example.com;


        include snippets/acme-challenge.conf;

        location / {
                return 301 https://$host$request_uri;
        }

}

server {

        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        ssl_certificate           /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/example.com/privkey.pem;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH"; # TLS cipher suites set: bettercrypto_org__set_b_pfs
        ssl_ecdh_curve            secp384r1;
        ssl_stapling              on;
        resolver                  8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout          5s;
        add_header                Strict-Transport-Security "max-age=15768000; includeSubDomains; preload";
        add_header                X-Content-Type-Options "nosniff" always;
        add_header                X-Frame-Options "SAMEORIGIN" always;
        add_header                X-XSS-Protection "1; mode=block";
        add_header                Referrer-Policy "no-referrer";

#        server_name ~.;
        server_name example.com www.example.com;

        root /var/www/example.com;

        access_log /var/log/nginx/example.com_access.log;
        error_log /var/log/nginx/example.com_error.log;

        index index.html index.htm index.php;

        include snippets/acme-challenge.conf;

        # Exclusions
        include global/server/exclusions.conf;

        # Security
        include global/server/security.conf;

        # Static Content
        include global/server/static-files.conf;

        # Fastcgi cache rules
        include global/server/fastcgi-cache.conf;

        # GZIP rules
        include global/gzip.conf;

        # HTTP rules
        include global/http.conf;

        # Limit Rules
        include global/limits.conf;

        # Others rules ??
        include /etc/nginx/sites-default.d/*.conf;

        # rewrite /wp-admin$ $scheme://$host$uri/ permanent;

        location = /nginx_status {
                stub_status on;
                access_log off;
                allow 127.0.0.1/32;
                allow ::1/128;
                allow 192.241.242.236;
                allow 10.13.0.5;
                deny all;
        }

        location ~ /(\.|wp-config.php|readme.html|license.txt|wp-cli.local.yml|wp-cli.yml) {
                return 404;
        }

        location / {
                try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
            try_files $uri =404;
            include global/fastcgi-params.conf;

            fastcgi_pass php-wordpress;

            # Skip cache based on rules in global/server/fastcgi-cache.conf.
            fastcgi_cache_bypass $skip_cache;
            fastcgi_no_cache $skip_cache;

            # Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
            # fastcgi_cache wpicluster;

            # Define caching time.
            fastcgi_cache_valid 60m;
            # increase timeouts
            fastcgi_read_timeout 6000;
            fastcgi_connect_timeout 6000;
            fastcgi_send_timeout 6000;
            proxy_read_timeout 6000;
            proxy_connect_timeout 6000;
        }
}
